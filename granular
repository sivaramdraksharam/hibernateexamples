StoreData.java

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import com.javatpoint.mybeans.Employee;
import com.javatpoint.mybeans.Point;
import com.javatpoint.mybeans.Triangle;

public class StoreData {
public static void main(String[] args) {

//create standard service registry for configuring session factory to instantiate beans by the container
StandardServiceRegistry ssr = new StandardServiceRegistryBuilder().configure("hibernate.cfg.xml").build();

//build meta data for the session factory that holds the beans
Metadata meta = new MetadataSources(ssr).getMetadataBuilder().build();

//create session factory by calling method from meta object
SessionFactory factory = meta.getSessionFactoryBuilder().build();

//create a session by calling openSession() method from factory
Session session = factory.openSession();

//create transaction object to start transaction
Transaction t1 = session.beginTransaction();

//create an object in persistence layer
Employee e1 = new Employee();

//set the attribute values via application
e1.setId(8);
e1.setFirstName("Jack");
e1.setLastName("dorson");

//save the object to the database using persitance layer
session.save(e1);

//commit the transaction via transaction object
t1.commit();
//close the session - session state is maintained by hibernate
session.close();

System.out.println("Employee successfully saved");

session=factory.openSession();
Transaction t2 = session.beginTransaction();
 
 Point p1=new Point();
 p1.setX(5);p1.setY(5);
 
 Point p2=new Point();
 p2.setX(13);p2.setY(15);
 
 Point p3=new Point();
 p3.setX(12);p3.setY(17);
 
 Triangle triangle=new Triangle(p1,p2,p3);
 triangle.setId(3);
 triangle.setTname("T3");
 float area=triangle.calcArea();
 triangle.setTarea(area);  
 

 System.out.println("Area of triangle is:"+area);
 
 session.save(triangle);
 
 t2.commit();
 
 System.out.println("Triangle successfully saved");
 

factory.close();
session.close();

}
}

------------------------------
Employee.java
package com.javatpoint.mybeans;
import javax.persistence.Entity;  
import javax.persistence.Id;  
import javax.persistence.Table;  
 
//create persistence class
@Entity  
@Table(name= "emp500")  
public class Employee {    

//declare properties - usually id as one of them
@Id  
private int id;    
private String firstName,lastName;    
   
public int getId() {    
    return id;    
}    
public void setId(int id) {    
    this.id = id;    
}    
public String getFirstName() {    
    return firstName;    
}    
public void setFirstName(String firstName) {    
    this.firstName = firstName;    
}    
public String getLastName() {    
    return lastName;    
}    
public void setLastName(String lastName) {    
    this.lastName = lastName;    
}    
}  
-----------------------
Figure.java
package com.javatpoint.mybeans;

public interface Figure {
StringBuilder figureName=new StringBuilder("Shape");

//static method implementation
public static float calcArea()
{
return 0.0f;
}

//default method implementation
public default void showFigure()
{
System.out.println("Figure is unknown");
}

}
===============

Point.java
package com.javatpoint.mybeans;

public class Point {
private int id;
private int x;
private int y;
public int getId() {
return id;
}
public void setId(int id) {
this.id = id;
}
public int getX() {
return x;
}
public void setX(int x) {
this.x = x;
}
public int getY() {
return y;
}
public void setY(int y) {
this.y = y;
}

}
================
Triangle.java
package com.javatpoint.mybeans;
import javax.persistence.Id;
import javax.persistence.Entity;
import javax.persistence.Table;

@Entity  
@Table(name= "triangle")
public class Triangle implements Figure{
//properties
@Id
private int id;
private String tname;
private float tarea;

private Point A;
private Point B;
private Point C;



//no-arg constructor
public Triangle() {
super();
tname="Triangle";
}

//argument constructor

public Triangle(Point a, Point b, Point c) {
super();
A = a;
B = b;
C = c;
}



public int getId() {
return id;
}

public void setId(int id) {
this.id = id;
}

public String getTname() {
return tname;
}

public void setTname(String figurename) {
this.tname=figurename;
}

public float getTarea() {
return tarea;
}

public void setTarea(float tarea) {
this.tarea = tarea;
}

public Point getA() {
return A;
}

public void setA(Point a) {
A = a;
}
public Point getB() {
return B;
}
public void setB(Point b) {
B = b;
}
public Point getC() {
return C;
}
public void setC(Point c) {
C = c;
}

public void showFigure()
{
System.out.println("Figure is "+figureName);
}


public float calcArea() {
float area=Math.abs( (A.getX()*(B.getY()-C.getY())+B.getX()*(C.getY()-A.getY())+C.getX()*(A.getY()-B.getY())/2));
System.out.println(area);
return area;
}



}
hibernate.cfg.xml
<?xml version="1.0" encoding="UTF-8"?>  
    <!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
    <hibernate-configuration>  
             
        <session-factory>
        <property name="hbm2ddl.auto">update</property>
       <property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>
       <property name="connection.url">jdbc:mysql://localhost:3306/test</property>
        <property name="connection.username">root</property>
        <property name="connection.password">Password@123</property>
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
            <mapping class="com.javatpoint.mybeans.Employee"/>  
            <mapping class="com.javatpoint.mybeans.Triangle"/>
            <mapping class="com.javatpoint.mybeans.Point"/>
    </session-factory>
   
    </hibernate-configuration> 


	
	
	
